// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model AdminData {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  username  String?
  password  String?
  name      String?
  createdAt DateTime @default(now())
  createdBy String?
  updateAt  DateTime @updatedAt
  updateBy  String?
}

model UserData {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  username      String?        @unique
  password      String?        @unique
  firstname     String?
  lastname      String?
  email         String         @unique
  emailVerified Boolean        @default(false)
  tel           String?
  image         String?
  createdAt     DateTime       @default(now())
  createdBy     String
  updateAt      DateTime       @updatedAt
  updateBy      String
  LinkListData  LinkListData[]
  PaymentData   PaymentData[]
}

model LinkListData {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  title        String?
  origUrl      String?
  shortUrl     String?
  pathShortUrl String?
  click        Int       @default(0)
  createdAt    DateTime  @default(now())
  createdBy    String
  updateAt     DateTime  @updatedAt
  updateBy     String
  user         UserData? @relation(fields: [userId], references: [id])
  userId       String?   @db.ObjectId
}

model PackageData {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  price       Float
  setlink     String?
  setQR       String?
  createdAt   DateTime      @default(now())
  createdBy   String
  updateAt    DateTime      @updatedAt
  updateBy    String
  PaymentData PaymentData[]
}

model PaymentData {
  id           String       @id @default(auto()) @map("_id") @db.ObjectId
  purchaseDate DateTime
  buyDay       DateTime
  payDay       DateTime
  createdAt    DateTime     @default(now())
  createdBy    String
  updateAt     DateTime     @updatedAt
  updateBy     String
  packageData  PackageData? @relation(fields: [packageId], references: [id])
  packageId    String?      @db.ObjectId
  user         UserData?    @relation(fields: [userId], references: [id])
  userId       String?      @db.ObjectId
}
